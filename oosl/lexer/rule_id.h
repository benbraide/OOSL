#pragma once

#ifndef OOSL_RULE_ID_H
#define OOSL_RULE_ID_H

namespace oosl{
	namespace lexer{
		enum class rule_id{
			nil,
			module_,
			export_,
			import_,
			enum_,
			union_,
			struct_,
			class_,
			namespace_,
			using_,
			typedef_,
			operator_,
			echo,
			true_,
			false_,
			indeterminate,
			nan,
			nullptr_,
			auto_,
			any_,
			void_,
			bool_,
			byte_,
			char_,
			wchar_,
			int8_,
			uint8_,
			int16_,
			uint16_,
			int32_,
			uint32_,
			int64_,
			uint64_,
			int128_,
			uint128_,
			float_,
			double_,
			ldouble,
			string_,
			wstring_,
			array_,
			pointer,
			function,
			nullptr_t,
			nan_t,
			type_,
			node_,
			storage_,
			unsigned_,
			try_,
			catch_,
			finally_,
			if_,
			else_,
			unless,
			while_,
			for_,
			until,
			do_,
			switch_,
			case_,
			default_,
			break_,
			continue_,
			return_,
			decltype_,
			tls,
			static_,
			const_,
			final_,
			ref,
			private_,
			protected_,
			public_,
			static_cast_,
			reinterpret_cast_,
			self,
			placeholder,
			call,
			node,
			storage,
			exp,
			real,
			rad,
			hex,
			dec,
			oct,
			bin,
			identifier,
			open_sq,
			open_par,
			open_cur,
			close_sq,
			close_par,
			close_cur,
			colon,
			semi_colon,
			backslash,
			comment_sng,
			comment_mult,
			comma,
			assignment,
			compound_bitwise_or,
			compound_bitwise_xor,
			compound_bitwise_and,
			compound_left_shift,
			compound_right_shift,
			compound_plus,
			compound_minus,
			compound_times,
			compound_divide,
			compound_modulus,
			ternary,
			relational_or,
			relational_and,
			ellipsis,
			bitwise_or,
			bitwise_xor,
			bitwise_and,
			variant_or,
			variant_and,
			like,
			equality,
			explicit_equality,
			inverse_equality,
			explicit_inverse_equality,
			less,
			less_or_equal,
			more_or_equal,
			more,
			left_shift,
			right_shift,
			plus,
			minus,
			times,
			divide,
			modulus,
			throw_,
			new_,
			delete_,
			sizeof_,
			typeof,
			bitwise_inverse,
			relational_not,
			increment,
			decrement,
			member_access,
			member_pointer_access,
			scope_resolution,
			punct,
			quote_dbl,
			quote_sng,
			quote_back,
			esc_quote_dbl,
			esc_quote_sng,
			esc_quote_back,
			new_line,
			blank,
			term,
			expression,
		};
	}
}

#endif /* !OOSL_RULE_ID_H */
